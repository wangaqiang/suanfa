一.时间复杂度
    如果一个问题的规模是n,解决这一问题的某一算法所需要的时间为T(n),它是n的某一函数T(n)称为这一算法的'时间复杂性'.
    基本计算规则:
    1.基本操作,认为时间复杂度为O(1)
    2.顺序结构,时间复杂度按加法进行运算
    3.循环结构,时间复杂度按乘法法进行运算
    4.分支结构,时间复杂度按最大值进行运算
    5.判断一个算法的效率时,只需关注操作数量的最高次项,常数项和次要项往往忽略
    6.没有特殊说明往往分析的时间复杂度都是最坏时间复杂度.
二.常见的时间复杂度大小关系
    O(1)<O(logn)<O(n)<O(n*logn)<O(n**2)<O(n**3)<O(2**n)<O(n!)<O(n**n)